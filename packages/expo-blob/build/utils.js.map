{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AACH,MAAM,UAAU,qBAAqB,CAAC,IAAa;IACjD,IAAI,IAAI,KAAK,SAAS;QAAE,OAAO,EAAE,CAAC;IAClC,MAAM,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;IACtB,MAAM,cAAc,GAAG,gBAAgB,CAAC;IACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC;QAAE,OAAO,EAAE,CAAC;IACzC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC","sourcesContent":["/**\n * Normalizes the content type string for a Blob.\n *\n * Returns the lowercased content type if it is valid, or an empty string otherwise.\n *\n * A valid content type:\n *  - Is not null, undefined, or empty\n *  - Contains only printable ASCII characters (0x20â€“0x7E)\n *  - Does not contain forbidden control characters: NUL (\\x00), LF (\\x0A), or CR (\\x0D)\n *\n * If any of these conditions are not met, returns an empty string to indicate an invalid or unsafe content type.\n *\n * @param type The content type string to normalize.\n * @returns The normalized (lowercased) content type, or an empty string if invalid.\n */\nexport function normalizedContentType(type?: string): string {\n  if (type === undefined) return '';\n  const str = '' + type;\n  const asciiPrintable = /^[\\x20-\\x7E]+$/;\n  if (!asciiPrintable.test(str)) return '';\n  return str.toLowerCase();\n}\n"]}