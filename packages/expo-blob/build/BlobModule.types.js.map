{"version":3,"file":"BlobModule.types.js","sourceRoot":"","sources":["../src/BlobModule.types.ts"],"names":[],"mappings":"","sourcesContent":["import { NativeModule, SharedObject } from 'expo';\n\nimport { ExpoBlob } from './BlobModule';\n\nexport declare class Blob {\n  constructor(blobParts?: any, options?: BlobPropertyBag);\n\n  slice(start?: number, end?: number, contentType?: string): Blob;\n  stream(): ReadableStream;\n  text(): Promise<string>;\n  arrayBuffer(): Promise<ArrayBufferLike>;\n}\n\nexport declare class NativeBlob extends SharedObject {\n  readonly size: number;\n  readonly type: string;\n  constructor(blobParts?: BlobPart[], options?: BlobPropertyBag);\n  slice(start?: number, end?: number, contentType?: string): ExpoBlob;\n  bytes(): Promise<Uint8Array>;\n  text(): Promise<string>;\n}\n\nexport declare class ExpoBlobModule extends NativeModule {\n  Blob: typeof NativeBlob;\n}\n\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob;\n"]}